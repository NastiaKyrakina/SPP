main
    .article
        h1 Angular Console: What is it and why is it valuable for you?
        .text-content
            | In its current form, Angular Console aims to provide an easy to understand interface for the Angular CLI. The mental model it attempts to convey through Console’s UI design is merely a reflection of the core concepts used by the CLI itself. We believe that mirroring the CLIs mental model through a GUI is beneficial for both experts and novices writing Angular code.
            | For novice Angular developers, it is overwhelming to have to learn both about a new framework and also the concepts of a new toolchain at the same time. Our graphical representation of Angular’s toolchain makes learning its concepts easier and more intuitive.
            | For more practiced developers, the benefit of mirroring the Angular CLIs core concepts is that they no longer have to parse the Angular CLI’s metadata containing JSON in order to understand an Angular workspace’s structure. Humans were not meant to parse JSON files. Rather, we are far more effective at understanding and enjoying purposefully made user interfaces.
        .img-block
    .article
        h1 Apps That Work Natively on the Web and Mobile
        .text-content
            | Today we’re happy to announce an exciting new way to build web and mobile apps with Angular and NativeScript.
            | First, some background: since the beginning of Angular, you could use NativeScript with Angular to build mobile apps.
            | NativeScript is an open source framework for building truly native mobile apps with JavaScript. It lets you use your existing Angular skills, and as a result you get a native UI & performance on iOS and Android.
            | However, when you needed to build both a web and a native mobile app, you had to create, develop and maintain two separate projects. Although this got the job done, it quickly became apparent that we could do better than that.
            .img-block
    .article
        h1 Angular Schematics: Unit Testing
        .text-content
            | Building Schematics can be magical. With very little code you can build large structures that can be replicated over multiple projects. As with any coding, you’ll want to create unit tests to ensure that every change you made is exact and many situations are tested with ease. When starting out with Schematics, it might not be terribly obvious how to create tests for the tools you’ve created.
            | In this article, we are going to look at a method to create unit tests for your Angular Schematics by building off of another post previously posted about creating a Simple Schematic.
            .img-block
